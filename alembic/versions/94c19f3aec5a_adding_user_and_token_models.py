"""Adding user and token models

Revision ID: 94c19f3aec5a
Revises:
Create Date: 2025-04-20 18:03:30.760656

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "94c19f3aec5a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("ACCESS", "REFRESH", "RESET_PASSWORD", name="tokentype").create(op.get_bind())
    op.create_table(
        "users_user",
        sa.Column("id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_mfa_enabled", sa.Boolean(), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("is_blocked", sa.Boolean(), nullable=False),
        sa.Column("blocked_until", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("last_login", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_user_email"), "users_user", ["email"], unique=True)
    op.create_index(op.f("ix_users_user_id"), "users_user", ["id"], unique=False)
    op.create_table(
        "users_blacklisted_token",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column(
            "token_type",
            postgresql.ENUM("ACCESS", "REFRESH", "RESET_PASSWORD", name="tokentype", create_type=False),
            nullable=False,
        ),
        sa.Column("blacklisted_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("created_by_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_blacklisted_token_id"), "users_blacklisted_token", ["id"], unique=False)
    op.create_table(
        "users_mfa_attempt",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("code_expires_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("incorrect_attempts_count", sa.Integer(), nullable=False),
        sa.Column("resend_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users_user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_mfa_attempt_id"), "users_mfa_attempt", ["id"], unique=False)
    op.create_index(op.f("ix_users_mfa_attempt_user_id"), "users_mfa_attempt", ["user_id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_mfa_attempt_user_id"), table_name="users_mfa_attempt")
    op.drop_index(op.f("ix_users_mfa_attempt_id"), table_name="users_mfa_attempt")
    op.drop_table("users_mfa_attempt")
    op.drop_index(op.f("ix_users_blacklisted_token_id"), table_name="users_blacklisted_token")
    op.drop_table("users_blacklisted_token")
    op.drop_index(op.f("ix_users_user_id"), table_name="users_user")
    op.drop_index(op.f("ix_users_user_email"), table_name="users_user")
    op.drop_table("users_user")
    sa.Enum("ACCESS", "REFRESH", "RESET_PASSWORD", name="tokentype").drop(op.get_bind())
    # ### end Alembic commands ###
